Note 1- isme kya ho rha hai ki hum static price ko filter kar rhe hai. lekin hum chahte hai ki ek humare pass input text box ho aur mai usme jo bhi likhu uske hisab se data filter hokar dikhayi de
import React, { useState } from "react";
const App = () => {
  const studentdata = [
    { name: "satyendra", age: 25, marks: 78, price: 600 },
    { name: "sandhya", age: 35, marks: 82, price: 1800 },
    { name: "vikas", age: 25, marks: 56, price: 1200 },
    { name: "dhruv", age: 22, marks: 65, price: 4200 },
    { name: "neta", age: 28, marks: 48, price: 1900 },
  ];
  const currentDate = new Date().toLocaleDateString();

  const currentTime = new Date().toLocaleTimeString();

  const filterdata = studentdata.filter((student) => {
    return student.price == 1200;
  });

  return (
    <>
      <h1>My data</h1>
      <table>
        <thead>
          <tr>
            <td>index</td>
            <td>name</td>
            <td>age</td>
            <td>marks</td>
            <td>price</td>
            <td>modifiedprice</td>
            <td>Date</td>
            <td>time</td>
          </tr>
        </thead>
        <tbody>
          {studentdata.map((student, index) => (
            <tr key={index}>
              <td>{index}</td>
              <td>{student.name}</td>
              <td>{student.age}</td>
              <td>{student.marks}</td>
              <td>{student.price}</td>
              <td>{student.price}</td>
              <td>{currentDate}</td>
              <td>{currentTime}</td>
            </tr>
          ))}
        </tbody>
      </table>
      <p>{JSON.stringify(filterdata)}</p>
    </>
  );
};
export default App;

Note-2 hum isko dynamic bana rhe hai ek input box ke sath

import React, { useState } from "react";
const App = () => {
  const [search, setSearch] = useState("");
  const studentdata = [
    { name: "satyendra", age: 25, marks: 78, price: 600 },
    { name: "sandhya", age: 35, marks: 82, price: 1800 },
    { name: "vikas", age: 25, marks: 56, price: 1200 },
    { name: "dhruv", age: 22, marks: 65, price: 4200 },
    { name: "neta", age: 28, marks: 48, price: 1900 },
  ];
  const currentDate = new Date().toLocaleDateString();

  const currentTime = new Date().toLocaleTimeString();

  const filterdata = studentdata.filter((student) =>
    student.name.toLowerCase().includes(search.toLowerCase())
  );

  const handlefilter = (e) => {
    data = e.target.value;
    setSearch(data);
  };
  return (
    <>
      <h1>My data</h1>
      <table>
        <thead>
          <tr>
            <td>index</td>
            <td>name</td>
            <td>age</td>
            <td>marks</td>
            <td>price</td>
            <td>modifiedprice</td>
            <td>Date</td>
            <td>time</td>
          </tr>
        </thead>
        <tbody>
          {studentdata.map((student, index) => (
            <tr key={index}>
              <td>{index}</td>
              <td>{student.name}</td>
              <td>{student.age}</td>
              <td>{student.marks}</td>
              <td>{student.price}</td>
              <td>{student.price}</td>
              <td>{currentDate}</td>
              <td>{currentTime}</td>
            </tr>
          ))}
        </tbody>
      </table>
      <br />

      <input type="text" onChange={handlefilter} />
      <p>{search}</p>
      <p>{JSON.stringify(filterdata)}</p>
    </>
  );
};
export default App;

3) isme kya hoga ki runtime me record dikhte rahega aur jo bhi hum filter karene kewal wo data dikhega record me se
import { useState } from "react";

const App = () => {
  const [data, setData] = useState("");
  const StudentData = [
    { name: "satyendra", age: 25, subject: "Math", marks: 100, gotmarks: 80 },
    { name: "sandhya", age: 26, subject: "english", marks: 100, gotmarks: 70 },
    { name: "supriya", age: 27, subject: "science", marks: 100, gotmarks: 65 },
    { name: "tajuddin", age: 28, subject: "social", marks: 100, gotmarks: 85 },
    { name: "narmada", age: 29, subject: "geo", marks: 100, gotmarks: 98 },
  ];

  const handleOnChange = (e) => {
    name = e.target.value;
    setData(name);
  };

  const filterData = StudentData.filter((student, index) => {
    return (
      student.name.toLowerCase().includes(data.toLowerCase()) ||
      student.age.toString().includes(data.toLowerCase()) ||
      student.subject.toLowerCase().includes(data.toLowerCase()) ||
      student.marks.toString().includes(data.toLowerCase())
    );
  });

  return (
    <>
      <h1>My data</h1>
      <input type="text" onChange={handleOnChange} placeholder="filter text" />
      <table>
        <thead>
          <tr>
            <th>Name</th>
            <th>Age</th>
            <th>subject</th>
            <th>marks</th>
            <th>got marks</th>
            <th>percentage</th>
            <th>Date</th>
            <th>Time</th>
          </tr>
        </thead>

        <tbody>
          {filterData.map((student, index) => (
            <tr key={index}>
              <td>{student.name}</td>
              <td>{student.age}</td>
              <td>{student.subject}</td>
              <td>{student.marks}</td>
              <td>{student.gotmarks}</td>
              <td>{(student.gotmarks / student.marks) * 100}%</td>
              <td>{new Date().toLocaleDateString()}</td>
              <td>{new Date().toLocaleTimeString()}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </>
  );
};
export default App;



note- abhi isme kya ho rha hai ki agar koi data match nahi karega to pura record show karega aur phir jo data match karega kewal wo wo data show hoga. lekin next me mai chahta hu ki kewal matched data hi show ho means agar koi data match nahi ho rha hai to hume data hi nahi dikhayi de koi sa bhi. 
import { useState } from "react";

const App = () => {
  const [data, setData] = useState("");

  const StudentData = [
    { name: "satyendra", age: 25, subject: "Math", marks: 100, gotmarks: 80 },
    { name: "sandhya", age: 26, subject: "english", marks: 100, gotmarks: 70 },
    { name: "supriya", age: 27, subject: "science", marks: 100, gotmarks: 65 },
    { name: "tajuddin", age: 28, subject: "social", marks: 100, gotmarks: 85 },
    { name: "narmada", age: 29, subject: "geo", marks: 100, gotmarks: 98 },
  ];

  const handleSearch = (e) => {
    setData(e.target.value);
  };

  return (
    <>
      <h1>My table data</h1>

      <input
        type="text"
        placeholder="Search by name"
        value={data}
        onChange={handleSearch}
      />

      <table border="1" cellPadding="5">
        <thead>
          <tr>
            <th>Name</th>
            <th>Age</th>
            <th>Subject</th>
            <th>Marks</th>
            <th>Obtained</th>
            <th>Percentage</th>
          </tr>
        </thead>

        <tbody>
          {StudentData.map((student, index) => {
            // ✅ compute condition once
            const isMatch = student.name
              .toLowerCase()
              .includes(data.toLowerCase());

            // ✅ use && to render only if isMatch is true
            return (
              isMatch && (
                <tr key={index}>
                  <td>{student.name}</td>
                  <td>{student.age}</td>
                  <td>{student.subject}</td>
                  <td>{student.marks}</td>
                  <td>{student.gotmarks}</td>
                  <td>{((student.gotmarks / student.marks) * 100).toFixed(2)}%</td>
                </tr>
              )
            );
          })}
        </tbody>
      </table>
    </>
  );
};

export default App;

EX-2 i want that i only display the three data instead of showing all. so i will use the slice method
import { useState } from "react";
const App = () => {
  const StudentData = [
    { name: "satyendra", age: 23, subject: "math", marks: 80, percentage: 80 },
    { name: "sandhya", age: 23, subject: "math", marks: 100, percentage: 65 },
    {name: "abhinav",age: 29,subject: "science",marks: 100,percentage: 70,},
    { name: "vikas", age: 24, subject: "hindi", marks: 100, percentage: 80 },
    { name: "prasant", age: 29, subject: "python", marks: 100, percentage: 90 },
  ];

  const pagedata = StudentData.slice(0, 3);
  return (
    <>
      <h1>Table data</h1>
      <table>
        <thead>
          <tr>
            <th>Name</th>
            <th>Age</th>
            <th>Subject</th>
            <th>Marks</th>
            <th>Percentage</th>
          </tr>
        </thead>

        <tbody>
          {pagedata.map((student, index) => {
            return (
              <tr key={index}>
                <td>{student.name}</td>
                <td>{student.age}</td>
                <td>{student.subject}</td>
                <td>{student.marks}</td>
                <td>{student.percentage}</td>
              </tr>
            );
          })}
        </tbody>
      </table>
      <div>
        <button>prev</button>
        <span>1</span>
        <button>next</button>
      </div>
    </>
  );
};
export default App;

EX-3 apply the pagination here
import { useState } from "react";

const App = () => {
  const StudentData = [
    { name: "satyendra", age: 23, subject: "math", marks: 80, percentage: 80 },
    { name: "sandhya", age: 23, subject: "math", marks: 100, percentage: 65 },
    { name: "abhinav", age: 29, subject: "science", marks: 100, percentage: 70 },
    { name: "vikas", age: 24, subject: "hindi", marks: 100, percentage: 80 },
    { name: "prasant", age: 29, subject: "python", marks: 100, percentage: 90 },
    { name: "rahul", age: 22, subject: "english", marks: 95, percentage: 85 },
    { name: "nisha", age: 25, subject: "biology", marks: 88, percentage: 78 },
  ];

  const [currentPage, setCurrentPage] = useState(1);
  const rowsPerPage = 3;
  const totalPages = Math.ceil(StudentData.length / rowsPerPage); 
  const startIndex = (currentPage - 1) * rowsPerPage; // jab page number 2 me jayenge man lo to array ka kaon se index se kaon se index tak ka data dikhna chahiye
  const endIndex = startIndex + rowsPerPage;
  const currentData = StudentData.slice(startIndex, endIndex); //iska use hum array ke data ko slice karne ke liye karte hai. ki kaha se kaha tak hum array ke data ko slice kar de

  const goToNext = () => {
    if (currentPage < totalPages) setCurrentPage(currentPage + 1);
  };

  const goToPrev = () => {
    if (currentPage > 1) setCurrentPage(currentPage - 1);
  };

  return (
    <>
      <h1>Table data</h1>
      <table border="1" cellPadding="8">
        <thead>
          <tr>
            <th>Name</th>
            <th>Age</th>
            <th>Subject</th>
            <th>Marks</th>
            <th>Percentage</th>
          </tr>
        </thead>

        <tbody>
          {currentData.map((student, index) => (
            <tr key={index}>
              <td>{student.name}</td>
              <td>{student.age}</td>
              <td>{student.subject}</td>
              <td>{student.marks}</td>
              <td>{student.percentage}</td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* Pagination Controls */}
      <div style={{ marginTop: "10px" }}>
        <button onClick={goToPrev} disabled={currentPage === 1}>
          Prev
        </button>
        <span style={{ margin: "0 10px" }}>
          Page {currentPage} of {totalPages}
        </span>
        <button onClick={goToNext} disabled={currentPage === totalPages}>
          Next
        </button>
      </div>
    </>
  );
};

export default App;
